Return-Path: <blinux-list-bounces@redhat.com>
X-Original-To: lists+blinux-list@lfdr.de
Delivered-To: lists+blinux-list@lfdr.de
Received: from us-smtp-delivery-124.mimecast.com (us-smtp-delivery-124.mimecast.com [170.10.129.124])
	by mail.lfdr.de (Postfix) with ESMTPS id 2EA07591FD6
	for <lists+blinux-list@lfdr.de>; Sun, 14 Aug 2022 15:06:23 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
	s=mimecast20190719; t=1660482382;
	h=from:from:sender:sender:reply-to:reply-to:subject:subject:date:date:
	 message-id:message-id:to:to:cc:mime-version:mime-version:
	 content-type:content-type:
	 content-transfer-encoding:content-transfer-encoding:
	 in-reply-to:in-reply-to:references:references:list-id:list-help:
	 list-unsubscribe:list-subscribe:list-post;
	bh=R0G71w4gavB/5s/q4UBXafbUZGZFEwAfaJ31bmcVMe0=;
	b=eT0mKDzOvvloDjXW1vetxJKJBNCQJSQYZeKQtC2zK32heixIVJr6qARHyJxd+d38kG/2NA
	qMLr8nPpnIO2G3obaPiU5aDwQJAEYl47rMtFwQo03WBrcJbzhE/4kQG8P5bT5v+gosNwRg
	kHDaM6mbI5SdSjq3mr270CoNSav6dOw=
Received: from mimecast-mx02.redhat.com (mimecast-mx02.redhat.com
 [66.187.233.88]) by relay.mimecast.com with ESMTP with STARTTLS
 (version=TLSv1.2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 us-mta-471-BXZ8jqV_PGWsZMbvQ27yFA-1; Sun, 14 Aug 2022 09:06:18 -0400
X-MC-Unique: BXZ8jqV_PGWsZMbvQ27yFA-1
Received: from smtp.corp.redhat.com (int-mx01.intmail.prod.int.rdu2.redhat.com [10.11.54.1])
	(using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mimecast-mx02.redhat.com (Postfix) with ESMTPS id DD7E2811E76;
	Sun, 14 Aug 2022 13:06:16 +0000 (UTC)
Received: from mm-prod-listman-01.mail-001.prod.us-east-1.aws.redhat.com (unknown [10.30.29.100])
	by smtp.corp.redhat.com (Postfix) with ESMTP id 2E35140CF916;
	Sun, 14 Aug 2022 13:06:08 +0000 (UTC)
Received: from mm-prod-listman-01.mail-001.prod.us-east-1.aws.redhat.com (localhost [IPv6:::1])
	by mm-prod-listman-01.mail-001.prod.us-east-1.aws.redhat.com (Postfix) with ESMTP id EE4021946A49;
	Sun, 14 Aug 2022 13:06:07 +0000 (UTC)
Delivered-To: blinux-list@listman.corp.redhat.com
Delivered-To: blinux-list@redhat.com
Date: Sun, 14 Aug 2022 08:02:57 -0500
MIME-Version: 1.0
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:91.0) Gecko/20100101
 Thunderbird/91.12.0
Subject: Re: "Accessibility in Fedora Workstation" (fwd)
To: speakup@linux-speakup.org, blinux-list@redhat.com, discuss@blvuug.org
References: <Pine.LNX.4.64.2208112229350.1215855@server2.shellworld.net>
 <YvhV4TWzuP2O1JAZ@novena-choice-citizen>
 <Pine.LNX.4.64.2208132205110.1261053@server2.shellworld.net>
In-Reply-To: <Pine.LNX.4.64.2208132205110.1261053@server2.shellworld.net>
X-Content-Filtered-By: Mailman/MimeDel 2.1.29
Message-ID: <mailman.526.1660482367.10505.blinux-list@redhat.com>
From: Linux for blind general discussion <blinux-list@redhat.com>
X-BeenThere: blinux-list@redhat.com
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Linux for blind general discussion <blinux-list.redhat.com>
List-Unsubscribe: <https://listman.redhat.com/mailman/options/blinux-list>,
 <mailto:blinux-list-request@redhat.com?subject=unsubscribe>
List-Archive: <http://listman.redhat.com/archives/blinux-list/>
List-Post: <mailto:blinux-list@redhat.com>
List-Help: <mailto:blinux-list-request@redhat.com?subject=help>
List-Subscribe: <https://listman.redhat.com/mailman/listinfo/blinux-list>,
 <mailto:blinux-list-request@redhat.com?subject=subscribe>
Reply-To: blinux-list@redhat.com
Errors-To: blinux-list-bounces@redhat.com
Sender: "Blinux-list" <blinux-list-bounces@redhat.com>
X-Scanned-By: MIMEDefang 2.84 on 10.11.54.1
X-Mimecast-Spam-Score: 0
X-Mimecast-Originator: redhat.com
Content-Language: en-US
Content-Transfer-Encoding: base64
Content-Type: text/plain; charset="utf-8"; Format="flowed"

SSdtIGdvaW5nIHRvIGFkZHJlc3MgcG9pbnRzIGZyb20gc2V2ZXJhbCBvZiBLYXJlbidzIG1lc3Nh
Z2VzOi4KCj4gaGUgaXMsIGFjY29yZGluZyB0byB0aG9zZSB3cml0aW5nIHRoZSBhcnRpY2xlIGJy
aW5naW5nIGFjY2Vzc2liaWxpdHkgCj4gdG8gRmVkb3JhIHdvcmtzdGF0aW9uLgo+IGkgcmVzcGVj
dCB0aGF0IGZvciB0aG9zZSBpbiB0aGUga25vdywgaW4gdGhlIGNob2lyIHNvIHRvIHNwZWFrIHdo
YXQgaGUgCj4gaXMgZG9pbmcgaXMgY2xlYW4gdXAuCj4gYnV0IHRoYXQgaXMgbm90IGhvdyB0aGUg
Z2VuZXJhbCBMaW51eCBjb21tdW5pdHkgaXMgdGFraW5nIHRoaXMgCj4gaW5mb3JtYXRpb24uCkxl
dCdzIGxvb2sgYXQgd2hhdCB0aGUgYXJ0aWNsZSBhY3R1YWxseSBzYXlzLCBwYXJ0aWN1bGFybHkg
dGhlIGludHJvIApiZWZvcmUgdGhlIGludGVydmlldzoKCiAgICBUaGUgZmlyc3QgY29uY2VydGVk
IGVmZm9ydCB0byBzdXBwb3J0IGFjY2Vzc2liaWxpdHkgdW5kZXIgTGludXggd2FzCiAgICB1bmRl
cnRha2VuIGJ5IFN1biBNaWNyb3N5c3RlbXMgd2hlbiB0aGV5IGRlY2lkZWQgdG8gdXNlIEdOT01F
IGZvcgogICAgU29sYXJpcy4gU3VuIHB1dCB0b2dldGhlciBhIHRlYW0gZm9jdXNlZCBvbiBidWls
ZGluZyB0aGUgcGllY2VzIHRvCiAgICBtYWtlIEdOT01FIDIgZnVsbHkgYWNjZXNzaWJsZSBhbmQg
d29ya2VkIHdpdGggaGFyZHdhcmUgbWFrZXJzIHRvCiAgICBtYWtlIHN1cmUgdGhpbmdzIGxpa2Ug
QnJhaWxsZSBkZXZpY2VzIHdvcmtlZCB3ZWxsLiBJIGV2ZW4gaGVhcmQKICAgIGNsYWltcyB0aGF0
IEdOT01FIGFuZCBMaW51eCBoYWQgdGhlIGJlc3QgYWNjZXNzaWJpbGl0eSBvZiBhbnkKICAgIG9w
ZXJhdGluZyBzeXN0ZW0gZm9yIGEgd2hpbGUgZHVlIHRvIHRoaXMgZWZmb3J0LiBBcyBTdW4gc3Rh
cnRlZAogICAgc3RydWdnbGluZyBhbmQgZ290IGFjcXVpcmVkIGJ5IE9yYWNsZSB0aGlzIGFjY2Vz
c2liaWxpdHkgZWZmb3J0CiAgICBldmVudHVhbGx5IHRyYWlsZWQgb2ZmIHdpdGggdGhlIGNvbW11
bml0eSB0cnlpbmcgdG8gcGljayB1cCB0aGUKICAgIHNsYWNrIGFmdGVyd2FyZHMuIEVzcGVjaWFs
bHkgZW5naW5lZXJzIGZyb20gSWdhbGlhIHdlcmUgcXVpdGUgYWN0aXZlCiAgICBmb3IgYSB3aGls
ZSB0cnlpbmcgdG8ga2VlcCB0aGUgYWNjZXNzaWJpbGl0eSBzdXBwb3J0IHdvcmtpbmcgd2VsbC4K
CiAgICBCdXQgb3ZlciB0aGUgeWVhcnMgd2UgZGVmaW5pdGVseSBsb3N0IGEgYml0IG9mIGZvY3Vz
IG9uIHRoaXMgYW5kIHdlCiAgICBrbm93IHRoYXQgdmFyaW91cyBwYXJ0cyBvZiBHTk9NRSAzIGZv
ciBpbnN0YW5jZSBhcmVu4oCZdCBncmVhdCBpbgogICAgdGVybXMgb2YgYWNjZXNzaWJpbGl0eS4g
U28gYXQgUmVkIEhhdCB3ZSBoYXZlIGhhZCBhIGxvdCBvZiBmb2N1cwogICAgb3ZlciB0aGUgbGFz
dCBmZXcgeWVhcnMgdHJ5aW5nIHRvIGVuc3VyZSB3ZSBhcmUgbWluZGZ1bCBhYm91dAogICAgZGl2
ZXJzaXR5IGFuZCBpbmNsdXNpb24gd2hlbiBoaXJpbmcsIHRyeWluZyB0byBlbnN1cmUgdGhhdCB3
ZSBkb27igJl0CiAgICBhY2NpZGVudGFsbHkgcHJlLXNlbGVjdCBhZ2FpbnN0IHVuZGVycmVwcmVz
ZW50ZWQgZ3JvdXBzIGJhc2VkIG9uIGZvcgogICAgaW5zdGFuY2UgZ2VuZGVyIG9yIGV0aG5pY2l0
eS4gQnV0IG9uZSBhcmVhIHdlIHJlYWxpemVkIHdlIGhhZG7igJl0CiAgICBnaXZlbiBzbyBtdWNo
IGZvY3VzIHJlY2VudGx5IHdhcyBhcm91bmQgdGVjaG5vbG9naWVzIHRoYXQgYWxsb3dlZAogICAg
cGVvcGxlIHdpdGggdmFyaW91cyBkaXNhYmlsaXRpZXMgdG8gbWFrZSB1c2Ugb2Ygb3VyIHNvZnR3
YXJlLiBUaHVzIEkKICAgIGFtIHZlcnkgaGFwcHkgdG8gYW5ub3VuY2UgdGhhdCBSZWQgSGF0IGhh
cyBqdXN0IGhpcmVkIEx1a2FzCiAgICBUeXJ5Y2h0ciwgd2hvIGlzIGEgYmxpbmQgc29mdHdhcmUg
ZW5naW5lZXIsIHRvIGxlYWQgb3VyIGVmZm9ydCBpbgogICAgbWFraW5nIHN1cmUgUmVkIEhhdCBF
bnRlcnByaXNlIExpbnV4IGFuZCBGZWRvcmEgV29ya3N0YXRpb24gaGFzCiAgICBleGNlbGxlbnQg
YWNjZXNzaWJpbGl0eSBzdXBwb3J0IQoKVGhhdCdzIHNvbWV3aGF0IGxvbmctd2luZGVkLCBidXQg
aXQncyBjbGVhciB0byBhbnkgY2FyZWZ1bCByZWFkZXIgdGhhdCAKdGhlIGZvdW5kYXRpb24gZm9y
IGFjY2Vzc2liaWxpdHkgd2FzIGFscmVhZHkgbGFpZCwgYW5kIHRoYXQgd2hhdCBtb3N0IAp1cmdl
bnRseSBuZWVkcyB0byBiZSBkb25lIGlzIHRvIGZpeCB3aGF0IGhhcyBiZWVuIGJyb2tlbiBpbiB0
aGUgeWVhcnMgCnNpbmNlIFN1bidzIGFjY2Vzc2liaWxpdHkgdGVhbSB3YXMgZGlzYmFuZGVkLiBJ
ZiB0aGluZ3MgZ2V0IAptaXNyZXByZXNlbnRlZCBieSBvdGhlcnMgd2hvIGhhdmUgc2hhcmVkIHRo
ZSBhcnRpY2xlLCB0aGF0J3Mgc3VyZWx5IG5vdCAKdGhlIGZhdWx0IG9mIHRoZSBhdXRob3JzLiBU
aGF0IGhhcHBlbnMgYWxsIHRoZSB0aW1lIHdoZW4gcGVvcGxlIHNoYXJlIAp0aGluZ3Mgb25saW5l
OyBpdCdzIG5vdGhpbmcgbmV3LCBhbmQgbm90IHdvcnRoIGJlbGFib3JpbmcuCgo+IHRoZXJlIGFy
ZSBwZW9wbGUgdXNpbmcgTGludXggaW4gdGhlIGNvbnNvbGUgZGFpbHkgd2hvIGRlc2VydmUgZXF1
YWwgCj4gYWNjZXNzLiAKSSB0b29rIHRoaXMgcG9zaXRpb24gaW4gMjAwMCwgYnV0IGZvciB0aGUg
bGFzdCBkZWNhZGUgb3IgbW9yZSwgYWNjZXNzIHRvIAphIEdVSSBoYXMgYmVlbiB3aWRlbHkgYXZh
aWxhYmxlIHRvIGJsaW5kIHBlb3BsZSBhdCBubyBleHRyYSBjb3N0LiAoSWYgCnRoZXJlIGFyZSBi
bGluZCBwZW9wbGUgdG9kYXkgd2hvIGFyZSB0cnVseSBzdHVjayBvbiBvbGQgaGFyZHdhcmUgd2l0
aCBubyAKYWNjZXNzaWJsZSBHVUksIHRoYXQncyB1bmZvcnR1bmF0ZSwgYnV0IEkgdGhpbmsgdGhp
cyBpcyBvbmUgY2FzZSB3aGVyZSAKdGhlIGJlc3Qgc29sdXRpb24gaXMgY2hhcml0eSwgbm90IGV4
cGVjdGluZyB0aGUgcmVzdCBvZiB0aGUgd29ybGQgdG8gCmFjY29tbW9kYXRlIHRoaXMgc2l0dWF0
aW9uIGZvcmV2ZXIuIFRoYXQncyBubyBkaWZmZXJlbnQgdGhhbiBmb3Igc2lnaHRlZCAKcGVvcGxl
IHN0dWNrIG9uIHZlcnkgb2xkIGhhcmR3YXJlLikgQmxpbmRuZXNzIGl0c2VsZiBpcyBhIGNpcmN1
bXN0YW5jZSAKYmV5b25kIG9uZSdzIGNvbnRyb2wgdGhhdCBkZXNlcnZlcyByZWFzb25hYmxlIGFj
Y29tbW9kYXRpb24uIEJ1dCB0b2RheSwgCnVzaW5nIHRoZSB0ZXh0IGNvbnNvbGUgaXMgYSBjaG9p
Y2UsIGEgdmVyeSBjb25zY2lvdXMgY2hvaWNlIHRvIHN3aW0gCnVwc3RyZWFtLCBhZ2FpbnN0IHRo
ZSBjdXJyZW50LiBBbnlvbmUgd2hvIG1ha2VzIHRoYXQgY2hvaWNlIHNob3VsZCBiZSAKcHJlcGFy
ZWQgZm9yIGRpZmZpY3VsdHkuIEFuZCBpbiBmYWN0LCB0aGUgZmV3IHBlb3BsZSBJIGtub3cgd2hv
IGNob29zZSAKdG8gdXNlIHRoZSBjb25zb2xlIHRvZGF5IGFyZSBwcmVwYXJlZCB0byB1c2UgYSBH
VUkgb2Ygb25lIGZvcm0gb3IgCmFub3RoZXIgd2hlbiB0aGVyZSdzIG5vIG90aGVyIHdheSB0byBh
Y2NvbXBsaXNoIGEgdGFzay4gQSBwbGF0Zm9ybSAKY29tcGFueSBsaWtlIFJlZCBIYXQgaXMgdW5k
ZXIgbm8gb2JsaWdhdGlvbiB0byBjYXRlciB0byB0aGUgcHJlZmVyZW5jZSAKb2YgdGhlIGR3aW5k
bGluZyBtaW5vcml0eSBvZiBhIG1pbm9yaXR5IHdobyBjaG9vc2UgdG8gdXNlIHRoZSB0ZXh0IApj
b25zb2xlLiBUbyBiZSBjbGVhciwgSSBoYXZlIG5vdGhpbmcgYWdhaW5zdCBwZW9wbGUgd2hvIGZp
bmQgCmNvbnNvbGUtYmFzZWQgdG9vbHMgbW9zdCBwcm9kdWN0aXZlOyBkbyB3aGF0ZXZlciB3b3Jr
cyBmb3IgeW91LiBCdXQgd2UgCm5lZWQgdG8gYmUgY2FyZWZ1bCBhYm91dCB3aGF0IHdlIGRlbWFu
ZCBmcm9tIHRoZSBtYWluc3RyZWFtIHdvcmxkLCBhbmQgSSAKdGhpbmsgdGhhdCBleHBlY3Rpbmcg
dG8gYmUgYWJsZSB0byBkbyBldmVyeXRoaW5nIHVzaW5nIG9ubHkgdGhlIGNvbnNvbGUgCmlzIHRv
byBtdWNoLgo+IFNlY29uZCwgdGhpcyBpbmRpdmlkdWFsJ3Mgam9iIGlzIHRvIG1ha2UgdGhpcyBw
bGF0Zm9ybSAKPiBhY2Nlc3NpYmxlLi4ud2hpY2ggaGFzIG5ldmVyIG1lYW50IGJsaW5kbmVzcyBl
eGNsdXNpdmVseS4KSGlzIGpvYiwgYWNjb3JkaW5nIHRvIHRoZSBhcnRpY2xlLCBpcywgInRvIGxl
YWQgb3VyIGVmZm9ydCBpbiBtYWtpbmcgCnN1cmUgUmVkIEhhdCBFbnRlcnByaXNlIExpbnV4IGFu
ZCBGZWRvcmEgV29ya3N0YXRpb24gaGFzIGV4Y2VsbGVudCAKYWNjZXNzaWJpbGl0eSBzdXBwb3J0
LiIgVG8gbWUsIHRoZSB3b3JkICJsZWFkIiBzdWdnZXN0cyB0aGF0IGhlJ3Mgbm90IApkb2luZyB0
aGlzIGFsb25lLiBBbHNvLCBhcyBJIHNhaWQgYWJvdmUsIHRoZSBmb3VuZGF0aW9uIG9mIGFjY2Vz
c2liaWxpdHkgCmZvciBhbGwgZGlzYWJpbGl0aWVzIHdhcyBhbHJlYWR5IGxhaWQsIGJ5IHRoZSB0
ZWFtIGF0IFN1biwgc3RhcnRpbmcgCnJvdWdobHkgMjAgeWVhcnMgYWdvLiBUaGV5IGRlbGliZXJh
dGVseSBjaG9zZSB0byBzdGFydCB3aXRoIGEgZ2VuZXJpYyAKYWNjZXNzaWJpbGl0eSBBUEksIG5v
dCBhIHNwZWNpZmljIHNvbHV0aW9uIGZvciBhIHBhcnRpY3VsYXIgZGlzYWJpbGl0eSwgCmJlY2F1
c2UgdGhleSB1bmRlcnN0b29kIHRoYXQgYSB3ZWxsLWRlc2lnbmVkIGFjY2Vzc2liaWxpdHkgQVBJ
IHdvdWxkIAplbmFibGUgaW5kZXBlbmRlbnQgZGV2ZWxvcGVycyB0byBwcm92aWRlIGFzc2lzdGl2
ZSB0ZWNobm9sb2dpZXMgZm9yIAptdWx0aXBsZSBkaXNhYmlsaXRpZXMuIEFuZCB3aGlsZSBJIGhh
dmUgbXkgb2JqZWN0aW9ucyB0byBhIHNwZWNpZmljIApsYXllciBvZiB0aGVpciBhY2Nlc3NpYmls
aXR5IGFyY2hpdGVjdHVyZSwgSSBiZWxpZXZlIHRoZXkgd2VyZSBvbiB0aGUgCm1hcmsgaGVyZS4g
RmluYWxseSwgSSB0aGluayBpdCdzIHNhZmUgdG8gc2F5IHRoYXQgYmxpbmRuZXNzIGlzIHRoZSBt
b3N0IApkaWZmaWN1bHQgZGlzYWJpbGl0eSB0byBhY2NvbW1vZGF0ZSBmb3IgR1VJIGFwcGxpY2F0
aW9uIGFuZCB0b29sa2l0IApkZXZlbG9wZXJzLCBhcyBpdCByZXF1aXJlcyB0aGVtIHRvIHByb3Zp
ZGUgYSBjb21wbGV0ZSBhbHRlcm5hdGl2ZSAKcmVwcmVzZW50YXRpb24gb2YgdGhlaXIgZGVmYXVs
dCwgaGlnaC1iYW5kd2lkdGggbW9kZSBvZiB2aXN1YWwgb3V0cHV0LiAKT25jZSB0aGF0IG5lZWQg
aGFzIGJlZW4gbWV0IGJ5IGltcGxlbWVudGluZyBhIHN1ZmZpY2llbnRseSByaWNoIAphY2Nlc3Np
YmlsaXR5IEFQSSwgaW5kZXBlbmRlbnQgZGV2ZWxvcGVycyBjYW4gaGFuZGxlIG90aGVyIGRpc2Fi
aWxpdGllcyAKYnkgaW1wbGVtZW50aW5nIGFsdGVybmF0ZSBpbnB1dCBtZXRob2RzOyBpbmRlZWQs
IHRoZSBtb3JlIGNvbXByZWhlbnNpdmUgCnRoZSBhY2Nlc3NpYmlsaXR5IEFQSSBpbXBsZW1lbnRh
dGlvbiBpcywgdGhlIG1vcmUgdGhlc2Ugb3RoZXIgaW5wdXQgCm1ldGhvZHMgaGF2ZSB0byB3b3Jr
IHdpdGguIFNvIEkgdGhpbmsgaXQncyBlbnRpcmVseSByZWFzb25hYmxlIGZvciBSZWQgCkhhdCBh
bmQgTHVrYXMgdG8gZm9jdXMgZm9yIG5vdyBvbiBtYWtpbmcgdGhlaXIgR1VJIGFjY2Vzc2libGUg
dG8gYmxpbmQgCnBlb3BsZSB3aXRoIGEgc2NyZWVuIHJlYWRlci4KPiBGdXJ0aGVyIHRoaXMgaW5k
aXZpZHVhbCBpcyBubyB2b2x1bnRlZXIsIGhlIGlzIGJlaW5nIHBhaWQgdG8gaGF2ZSB1cCAKPiB0
byBkYXRlIGluZm9ybWF0aW9uLCBub3QganVzdCBhYm91dCBmZWRvcmEsIGJ1dCBmb3Igc2NyZWVu
IHJlYWRlcnMgaGUgCj4gZGlkIG5vdCBldmVuIHJlZmVyZW5jZSBsaWtlIEZlbmlhbCA8c3BlbGxp
bmc+Cj4gSGUgaXMgYSBzaW5nbGUgaW5kaXZpZHVhbCwgVGhhdCBoZSBoYXMgbm90IHNlZW4gYSBo
YXJkd2FyZSAKPiBzeW50aGVzaXplcizCoCBkdWUgdG8gYWdlIGRvZXMgbm90IG1lYW4gdGhleSBk
byBub3QgZXhpc3QuCkFzIEkgd3JvdGUgZWxzZXdoZXJlLCB3aGF0IGhlIGlzIGFjdHVhbGx5IHBh
aWQgZm9yIGlzIGJldHdlZW4gaGltIGFuZCAKUmVkIEhhdC4gSWYgdGhleSBhcmUgcGF5aW5nIGhp
bSBleGNsdXNpdmVseSB0byBmb2N1cyBvbiBpbXByb3ZpbmcgR1VJIAphY2Nlc3NpYmlsaXR5IHdp
dGggT3JjYSwgSSB0aGluayB0aGF0J3MgZW50aXJlbHkgcmVhc29uYWJsZSwgYXMgSSAKZXhwbGFp
bmVkIGFib3ZlLiBUaGUgZmFjdCB0aGF0IGhpcyBzdGF0ZW1lbnRzIG9uIFNwZWFrdXAgd2VyZSBz
bGlnaHRseSAKaW5jb21wbGV0ZSwgb3IgdGhhdCBoZSBkaWRuJ3Qgc2F5IGFueXRoaW5nIGFib3V0
IEZlbnJpciwgaXMgYW5ub3lpbmcgdG8gCnRob3NlIGluIHRoZSBrbm93LCBidXQgbm90IHdvcnRo
IGdldHRpbmcgb3V0cmFnZWQgb3Zlci4gQWxzbyBub3RlIHRoYXQgCkx1a2FzJ3MgcHJpbWFyeSBq
b2IgaXMgbm90IGFkdm9jYWN5IG9yIGVkdWNhdGlvbiwgYnV0IHNvZnR3YXJlIApkZXZlbG9wbWVu
dC4gQWxvbmcgdGhlIHdheSwgaGUgd2lsbCBuZWVkIHRvIGVkdWNhdGUgb3RoZXIgZGV2ZWxvcGVy
cyAKYWJvdXQgYWNjZXNzaWJpbGl0eSwgYnV0IGhlJ3Mgbm90IG9ibGlnYXRlZCB0byBjb21wcmVo
ZW5zaXZlbHkgZWR1Y2F0ZSAKdGhlIHdvcmxkIGF0IGxhcmdlIGFib3V0IGhvdyBibGluZCBwZW9w
bGUgdXNlIExpbnV4LiBUaGUgZGV0YWlscyBvZiBob3cgCmJsaW5kIHBlb3BsZSBjYW4gYWNjZXNz
IHRoZSB0ZXh0IGNvbnNvbGUgYXJlIG9mIGxpdHRsZSBvciBubyBpbnRlcmVzdCB0byAKbW9zdCBw
bGF0Zm9ybSBhbmQgYXBwbGljYXRpb24gZGV2ZWxvcGVycywgd2hvIGFyZSB0aGUgcGVvcGxlIHRo
YXQgTHVrYXMgCndvdWxkIGFjdHVhbGx5IG5lZWQgdG8gZWR1Y2F0ZSBhcyBwYXJ0IG9mIGhpcyBq
b2IuIFdoYXQgd2UgcmVhbGx5IG5lZWQgCnRoZW0gdG8gdW5kZXJzdGFuZCBpcyBob3cgdGhleSBj
YW4gbWFrZSB0aGVpciBHVUlzIGFjY2Vzc2libGUsIGFuZCB0aGUgCmVhc2llciB3ZSBtYWtlIHRo
YXQgZm9yIHRoZW0sIHRoZSBtb3JlIGFjY2Vzc2liaWxpdHkgd2Ugd2lsbCBnZXQuIEluIApsaWdo
dCBvZiB0aGF0LCBkd2VsbGluZyB0b28gbXVjaCBvbiBjb25zb2xlIG9wdGlvbnMgY291bGQgZXZl
biBiZSAKY29uc2lkZXJlZCBhbiB1bm5lY2Vzc2FyeSBhbmQgY29uZnVzaW5nIGRpc3RyYWN0aW9u
Lgo+IFRoYXQgYXR0aXR1ZGUgaXMgZGFuZ2Vyb3VzLCBiZWNhdXNlIGhlIGlzIGVkdWNhdGluZyB0
aG9zZSBvdXRzaWRlIG9mIAo+IHRoZSBhY2Nlc3NpYmlsaXR5IGV4cGVyaWVuY2VzLCB3aG8gd2ls
bCBiZWxpZXZlIGhpcyBpZ25vcmFuY2UgaXMgZmFjdHVhbC4KCklmIHBlb3BsZSBvdXRzaWRlIHRo
ZSBibGluZCBjb21tdW5pdHksIGluY2x1ZGluZyBwbGF0Zm9ybSBhbmQgCmFwcGxpY2F0aW9uIGRl
dmVsb3BlcnMsIGJlbGlldmUgdGhhdCBzcGVlY2ggc3ludGhlc2lzIGhhcmR3YXJlIGlzIAp2YW5p
c2hpbmdseSByYXJlLCBvciB0aGF0IG9uZSBjYW4ndCB1c2UgU3BlYWt1cCB3aXRoIEZlZG9yYSAo
YnV0IGNhbiB1c2UgCkJSTFRUWSBvciBPcmNhKSwgdGhhdCdzIG9mIG5vIHByYWN0aWNhbCBjb25z
ZXF1ZW5jZS4gV2UganVzdCBuZWVkIHRoZW0gCnRvIGtub3cgaG93IHRoZXkgY2FuIG1ha2UgdGhl
aXIgR1VJcyBhbmQgd2ViIGFwcGxpY2F0aW9ucyBhY2Nlc3NpYmxlLCAKYW5kIHRvIGJlIGNvbnZp
bmNlZCB0aGF0IGl0J3Mgd29ydGggZG9pbmcuIE9uIG90aGVyIGRpc2FiaWxpdGllcywgaGUgc2Fp
ZDoKCiAgICBPZiBjb3Vyc2UsIHV0aWxpdGllcyBmb3Igb3RoZXIgYWNjZXNzaWJpbGl0eSBuZWVk
cyBleGlzdCBhcyB3ZWxsLAogICAgYnV0IEkgZG9u4oCZdCBrbm93IG11Y2ggYWJvdXQgdGhlc2Uu
CgpJdCdzIGdvb2QgdGhhdCBoZSdzIGhvbmVzdCBhYm91dCB3aGF0IGhlIGRvZXNuJ3Qga25vdy4g
SSBkb24ndCBiZWxpZXZlIAp0aGF0IGN1cnJlbnQgZ2FwIGluIGtub3dsZWRnZSBzaG91bGQgZGlz
cXVhbGlmeSBoaW0gZnJvbSB0aGUgam9iIHRoYXQgClJlZCBIYXQgYWN0dWFsbHkgaGlyZWQgaGlt
IHRvIGRvLCBhcyBvcHBvc2VkIHRvIHRoZSBqb2IgdGhhdCB5b3Ugc2VlbSB0byAKdGhpbmsgUmVk
IEhhdCBzaG91bGQgaGF2ZSBoaXJlZCBzb21lb25lIHRvIGRvLiBIZSdzIGdvaW5nIHRvIGhhdmUg
aGlzIApoYW5kcyBmdWxsIGp1c3QgbWFraW5nIEZlZG9yYSBXb3Jrc3RhdGlvbiBmdWxseSBhY2Nl
c3NpYmxlIHRvIGJsaW5kIApwZW9wbGUuIEkgdHJ1c3QgdGhhdCBoZSdsbCBiZSB3aWxsaW5nIHRv
IGxlYXJuIGFib3V0IG90aGVyIGFzc2lzdGl2ZSAKdGVjaG5vbG9naWVzIHdoZW4gdGhhdCBrbm93
bGVkZ2UgaXMgYWN0dWFsbHkgbmVjZXNzYXJ5LgoKPiBtYXkgSSBhc2sgZnJvbSB3aGVyZSBoZSBv
YnRhaW5lZCBoaXMgc29mdHdhcmUgZW5naW5lZXJpbmcgZGVncmVlPwo+IFN0dWRpZWQgY29tcHV0
ZXIgc2NpZW5jZT/CoCBQZXJoYXBzIGRpc2FiaWxpdHkgc3R1ZGllcz8KTmVpdGhlciBMdWthcyBu
b3IgUmVkIEhhdCBhcmUgb2JsaWdhdGVkIHRvIHByb3ZpZGUgdGhpcyBpbmZvcm1hdGlvbiB0byAK
cmFuZG9tIGJ5c3RhbmRlcnMuIEJ1dCBoZXJlJ3Mgd2hhdCBJIGZvdW5kIGluIG15IHF1aWNrIHJl
c2VhcmNoLiBMdWthcyAKcG9zdGVkIGhpcyB1bml2ZXJzaXR5IHRoZXNpcyBvbiBHaXRIdWIgCjxo
dHRwczovL2dpdGh1Yi5jb20vdHlyeWx1L3RoZXNpcz4sIGFuZCBmcm9tIHRoYXQgSSBkZWR1Y2Vk
IHRoYXQgaGUgCmVhcm5lZCBoaXMgYmFjaGVsb3IncyBkZWdyZWUgKGFuZCBwZXJoYXBzIGEgbWFz
dGVyJ3MgYXMgd2VsbCkgaW4gQXBwbGllZCAKSW5mb3JtYXRpY3MgZnJvbSBNYXNhcnlrIFVuaXZl
cnNpdHkgaW4gdGhlIEN6ZWNoIFJlcHVibGljLgo+IHRoZXJlIGFyZSBjZXJ0YWlubHkgc2NvcmVz
IG9mwqAgZGlzYWJsZWQgaW5kaXZpZHVhbHMgd2l0aCB0aGVzZSB2YXJpb3VzIAo+IGxldmVscyBv
ZiBxdWFsaWZpY2F0aW9uLi5ldmVuIHdobyBhcmUgTGludXggdXNlcnMuCgpTdXJlLiBCdXQgdGhl
IHF1ZXN0aW9uIGlzIG5vdCB3aGV0aGVyIHRoZSBqb2Igd2VudCB0byB0aGUgcGVyc29uIHdobyAK
c2VlbXMgbW9zdCBxdWFsaWZpZWQgdG8gYW4gb3V0c2lkZSBvYnNlcnZlciwgb3IgaXMga25vd24g
aW4gdGhhdCAKb2JzZXJ2ZXIncyBjb21tdW5pdHksIGJ1dCB3aGV0aGVyIHRoZSBqb2Igd2VudCB0
byBhIHBlcnNvbiB3aG8gd2FzIAphdmFpbGFibGUgYW5kIGludGVyZXN0ZWQgaW4gdGhlIGpvYiwg
aXMgcXVhbGlmaWVkIGVub3VnaCAoYXMganVkZ2VkIGJ5IAp0aGUgcGVvcGxlIGRvaW5nIHRoZSBo
aXJpbmcpLCBhbmQgd2lsbCBnZXQgdGhlIHdvcmsgZG9uZS4gUmVkIEhhdCBoYXZlIApiZWVuIGhp
cmluZyBkZXZlbG9wZXJzIHRvIHdvcmsgb24gb3BlbiBzb3VyY2UgZm9yIGRlY2FkZXMsIGFuZCBJ
IHRydXN0IAp0aGF0IHRoZXkgYXJlIGNvbXBldGVudCB0byBjaG9vc2UgYSBxdWFsaWZpZWQgY2Fu
ZGlkYXRlLiBCZXlvbmQgdGhhdCwgYXMgCkkgc3RhdGVkIGluIG15IGZpcnN0IHJlcGx5LCB3ZSBj
YW4gc2VlIGZvciBvdXJzZWx2ZXMgd2hhdCBMdWthcyBoYXMgCnByZXZpb3VzbHkgZG9uZSBvbmxp
bmUuIFRoZXJlJ3MgZXZlbiBtb3JlIG9mIHRoYXQgdGhhbiBJIHJlYWxpemVkIHdoZW4gSSAKd3Jv
dGUgdGhhdCBtZXNzYWdlLiBGb3IgZXhhbXBsZSwgaGUgc3VjY2Vzc2Z1bGx5IHN1Ym1pdHRlZCBh
IGZldyBwYXRjaGVzIAp0byB0aGUgR1RLIHJlcG9zaXRvcnksIGJlZm9yZSBSZWQgSGF0IGhpcmVk
IGhpbSwgYW5kIGhlIGhhcyBiZWVuIApyZXBvcnRpbmcgYnVncyBpbiBHTk9NRSBhY2Nlc3NpYmls
aXR5LCBwYXJ0aWN1bGFybHkgb24gUmVkIEhhdCdzIGJ1ZyAKdHJhY2tlciwgZm9yIHllYXJzLiBB
bmQgYXMgSSBzYWlkIG9uIEZyaWRheSwgaGlzIGZlZWwtdGhlLXN0cmVldHMgCnByb2plY3QgZGVt
b25zdHJhdGVzIGFuIGFwdGl0dWRlIGZvciB0YWtpbmcgb24gcmVhbC13b3JsZCBwcm9ncmFtbWlu
ZyAKcHJvamVjdHMuIFNvIEkgYmVsaWV2ZSBSZWQgSGF0J3MgZGVjaXNpb24gdG8gaGlyZSBoaW0g
d2FzIHNvdW5kLiBOb3QgCnRoYXQgdGhleSBuZWVkIG15IGFwcHJvdmFsLCBvciB0aGF0IG9mIGFu
eW9uZSBvbiB0aGVzZSBsaXN0cy4KCk5vdywgSSBzdWdnZXN0IHRoYXQgd2UgbGV0IHRoZSBuaXQt
cGlja2luZyBnbyBhbmQganVzdCBiZSBoYXBweSB0aGF0LCAKd2l0aCBmaW5hbmNpYWwgYmFja2lu
ZyBmcm9tIHRoZSBsZWFkaW5nIGNvbXBhbnkgaW4gdGhpcyBzcGFjZSwgR1VJIAphY2Nlc3NpYmls
aXR5IG9uIExpbnV4IGlzIG1vdmluZyBmb3J3YXJkLgoKTWF0dApfX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fXwpCbGludXgtbGlzdCBtYWlsaW5nIGxpc3QKQmxp
bnV4LWxpc3RAcmVkaGF0LmNvbQpodHRwczovL2xpc3RtYW4ucmVkaGF0LmNvbS9tYWlsbWFuL2xp
c3RpbmZvL2JsaW51eC1saXN0Cg==

